var N = null;var searchIndex = {};
searchIndex["shiplift"]={"doc":"Shiplift is a multi-transport utility for maneuvering docker containers","items":[[3,"Docker","shiplift","Entrypoint interface for communicating with docker daemon",N,N],[3,"Image","","Interface for accessing and manipulating a named docker image",N,N],[3,"Images","","Interface for docker images",N,N],[3,"Container","","Interface for accessing and manipulating a docker container",N,N],[3,"Containers","","Interface for docker containers",N,N],[3,"Networks","","Interface for docker network",N,N],[3,"Network","","Interface for accessing and manipulating a docker network",N,N],[0,"builder","","Interfaces for building various structures",N,N],[3,"PullOptions","shiplift::builder","",N,N],[3,"PullOptionsBuilder","","",N,N],[3,"BuildOptions","","",N,N],[12,"path","","",0,N],[3,"BuildOptionsBuilder","","",N,N],[3,"ContainerListOptions","","Options for filtering container list results",N,N],[3,"ContainerListOptionsBuilder","","Builder interface for `ContainerListOptions`",N,N],[3,"ContainerOptions","","Interface for building a new docker container from an existing image",N,N],[12,"name","","",1,N],[3,"ContainerOptionsBuilder","","",N,N],[3,"ExecContainerOptions","","",N,N],[3,"ExecContainerOptionsBuilder","","",N,N],[3,"EventsOptions","","Options for filtering streams of Docker events",N,N],[3,"EventsOptionsBuilder","","Builder interface for `EventOptions`",N,N],[3,"LogsOptions","","Options for controlling log request results",N,N],[3,"LogsOptionsBuilder","","Builder interface for `LogsOptions`",N,N],[3,"ImageListOptions","","Options for filtering image list results",N,N],[3,"ImageListOptionsBuilder","","Builder interface for `ImageListOptions`",N,N],[3,"RmContainerOptions","","Options for controlling log request results",N,N],[3,"RmContainerOptionsBuilder","","Builder interface for `LogsOptions`",N,N],[3,"NetworkListOptions","","Options for filtering networks list results",N,N],[3,"NetworkCreateOptions","","Interface for creating new docker network",N,N],[12,"name","","",2,N],[3,"NetworkCreateOptionsBuilder","","",N,N],[3,"ContainerConnectionOptions","","Interface for connect container to network",N,N],[12,"container","","",3,N],[4,"ContainerFilter","","Filter options for container listings",N,N],[13,"ExitCode","","",4,N],[13,"Status","","",4,N],[13,"LabelName","","",4,N],[13,"Label","","",4,N],[4,"EventFilterType","","",N,N],[13,"Container","","",5,N],[13,"Image","","",5,N],[13,"Volume","","",5,N],[13,"Network","","",5,N],[13,"Daemon","","",5,N],[4,"EventFilter","","Filter options for image listings",N,N],[13,"Container","","",6,N],[13,"Event","","",6,N],[13,"Image","","",6,N],[13,"Label","","",6,N],[13,"Type","","",6,N],[13,"Volume","","",6,N],[13,"Network","","",6,N],[13,"Daemon","","",6,N],[4,"ImageFilter","","Filter options for image listings",N,N],[13,"Dangling","","",7,N],[13,"LabelName","","",7,N],[13,"Label","","",7,N],[11,"default","","",8,[[],["pulloptions"]]],[11,"builder","","return a new instance of a builder for options",8,[[],["pulloptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",8,[[["self"]],["option",["string"]]]],[11,"default","","",9,[[],["pulloptionsbuilder"]]],[11,"image","","",9,[[["self"],["i"]],["self"]]],[11,"src","","",9,[[["self"],["s"]],["self"]]],[11,"repo","","",9,[[["self"],["r"]],["self"]]],[11,"tag","","",9,[[["self"],["t"]],["self"]]],[11,"build","","",9,[[["self"]],["pulloptions"]]],[11,"default","","",0,[[],["buildoptions"]]],[11,"builder","","return a new instance of a builder for options path is expected to be a file path to a directory containing a Dockerfile describing how to build a Docker image",0,[[["s"]],["buildoptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",0,[[["self"]],["option",["string"]]]],[11,"default","","",10,[[],["buildoptionsbuilder"]]],[11,"dockerfile","","set the name of the docker file. defaults to \"DockerFile\"",10,[[["self"],["p"]],["self"]]],[11,"tag","","tag this image with a name after building it",10,[[["self"],["t"]],["self"]]],[11,"remote","","",10,[[["self"],["r"]],["self"]]],[11,"nocache","","don't use the image cache when building image",10,[[["self"],["bool"]],["self"]]],[11,"rm","","",10,[[["self"],["bool"]],["self"]]],[11,"forcerm","","",10,[[["self"],["bool"]],["self"]]],[11,"network_mode","","`bridge`, `host`, `none`, `container:<name|id>`, or a custom network name.",10,[[["self"],["t"]],["self"]]],[11,"build","","",10,[[["self"]],["buildoptions"]]],[11,"default","","",11,[[],["containerlistoptions"]]],[11,"builder","","return a new instance of a builder for options",11,[[],["containerlistoptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",11,[[["self"]],["option",["string"]]]],[11,"default","","",12,[[],["containerlistoptionsbuilder"]]],[11,"filter","","",12,[[["self"],["vec",["containerfilter"]]],["self"]]],[11,"all","","",12,[[["self"]],["self"]]],[11,"since","","",12,[[["self"],["str"]],["self"]]],[11,"before","","",12,[[["self"],["str"]],["self"]]],[11,"sized","","",12,[[["self"]],["self"]]],[11,"build","","",12,[[["self"]],["containerlistoptions"]]],[11,"builder","","return a new instance of a builder for options",1,[[["str"]],["containeroptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",1,[[["self"]],["result",["string"]]]],[11,"parse_from","","",1,[[["self"],["hashmap"],["value"]]]],[11,"default","","",13,[[],["containeroptionsbuilder"]]],[11,"name","","",13,[[["self"],["str"]],["self"]]],[11,"volumes","","",13,[[["self"],["vec",["str"]]],["self"]]],[11,"expose","","",13,[[["self"],["u32"],["str"],["u32"]],["self"]]],[11,"links","","",13,[[["self"],["vec",["str"]]],["self"]]],[11,"memory","","",13,[[["self"],["u64"]],["self"]]],[11,"labels","","",13,[[["self"],["hashmap"]],["self"]]],[11,"extra_hosts","","",13,[[["self"],["vec",["str"]]],["self"]]],[11,"volumes_from","","",13,[[["self"],["vec",["str"]]],["self"]]],[11,"network_mode","","",13,[[["self"],["str"]],["self"]]],[11,"env","","",13,[[["self"],["vec",["str"]]],["self"]]],[11,"cmd","","",13,[[["self"],["vec",["str"]]],["self"]]],[11,"entrypoint","","",13,[[["self"],["str"]],["self"]]],[11,"capabilities","","",13,[[["self"],["vec",["str"]]],["self"]]],[11,"devices","","",13,[[["self"],["vec",["hashmap"]]],["self"]]],[11,"log_driver","","",13,[[["self"],["str"]],["self"]]],[11,"restart_policy","","",13,[[["self"],["str"],["u64"]],["self"]]],[11,"build","","",13,[[["self"]],["containeroptions"]]],[11,"builder","","return a new instance of a builder for options",14,[[],["execcontaineroptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",14,[[["self"]],["result",["string"]]]],[11,"default","","",15,[[],["execcontaineroptionsbuilder"]]],[11,"cmd","","Command to run, as an array of strings",15,[[["self"],["vec",["str"]]],["self"]]],[11,"env","","A list of environment variables in the form \"VAR=value\"",15,[[["self"],["vec",["str"]]],["self"]]],[11,"attach_stdout","","Attach to stdout of the exec command",15,[[["self"],["bool"]],["self"]]],[11,"attach_stderr","","Attach to stderr of the exec command",15,[[["self"],["bool"]],["self"]]],[11,"build","","",15,[[["self"]],["execcontaineroptions"]]],[11,"default","","",16,[[],["eventsoptions"]]],[11,"builder","","",16,[[],["eventsoptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",16,[[["self"]],["option",["string"]]]],[11,"clone","","",5,[[["self"]],["eventfiltertype"]]],[11,"default","","",17,[[],["eventsoptionsbuilder"]]],[11,"since","","Filter events since a given timestamp",17,[[["self"],["u64"]],["self"]]],[11,"until","","Filter events until a given timestamp",17,[[["self"],["u64"]],["self"]]],[11,"filter","","",17,[[["self"],["vec",["eventfilter"]]],["self"]]],[11,"build","","",17,[[["self"]],["eventsoptions"]]],[11,"default","","",18,[[],["logsoptions"]]],[11,"builder","","return a new instance of a builder for options",18,[[],["logsoptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",18,[[["self"]],["option",["string"]]]],[11,"default","","",19,[[],["logsoptionsbuilder"]]],[11,"follow","","",19,[[["self"],["bool"]],["self"]]],[11,"stdout","","",19,[[["self"],["bool"]],["self"]]],[11,"stderr","","",19,[[["self"],["bool"]],["self"]]],[11,"timestamps","","",19,[[["self"],["bool"]],["self"]]],[11,"tail","","how_many can either by \"all\" or a to_string() of the number",19,[[["self"],["str"]],["self"]]],[11,"build","","",19,[[["self"]],["logsoptions"]]],[11,"default","","",20,[[],["imagelistoptions"]]],[11,"builder","","",20,[[],["imagelistoptionsbuilder"]]],[11,"serialize","","",20,[[["self"]],["option",["string"]]]],[11,"default","","",21,[[],["imagelistoptionsbuilder"]]],[11,"digests","","",21,[[["self"],["bool"]],["self"]]],[11,"all","","",21,[[["self"],["bool"]],["self"]]],[11,"filter_name","","",21,[[["self"],["str"]],["self"]]],[11,"filter","","",21,[[["self"],["vec",["imagefilter"]]],["self"]]],[11,"build","","",21,[[["self"]],["imagelistoptions"]]],[11,"default","","",22,[[],["rmcontaineroptions"]]],[11,"builder","","return a new instance of a builder for options",22,[[],["rmcontaineroptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",22,[[["self"]],["option",["string"]]]],[11,"default","","",23,[[],["rmcontaineroptionsbuilder"]]],[11,"force","","",23,[[["self"],["bool"]],["self"]]],[11,"volumes","","",23,[[["self"],["bool"]],["self"]]],[11,"build","","",23,[[["self"]],["rmcontaineroptions"]]],[11,"default","","",24,[[],["networklistoptions"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",24,[[["self"]],["option",["string"]]]],[11,"builder","","return a new instance of a builder for options",2,[[["str"]],["networkcreateoptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",2,[[["self"]],["result",["string"]]]],[11,"parse_from","","",2,[[["self"],["hashmap"],["btreemap"]]]],[11,"default","","",25,[[],["networkcreateoptionsbuilder"]]],[11,"driver","","",25,[[["self"],["str"]],["self"]]],[11,"label","","",25,[[["self"],["vec",["hashmap"]]],["self"]]],[11,"build","","",25,[[["self"]],["networkcreateoptions"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",3,[[["self"]],["result",["string"]]]],[11,"parse_from","","",3,[[["self"],["hashmap"],["btreemap"]]]],[11,"new","","",3,[[["str"]],["containerconnectionoptions"]]],[11,"force","","",3,[[["self"]],["containerconnectionoptions"]]],[0,"errors","shiplift","Representations of various client errors",N,N],[4,"Error","shiplift::errors","",N,N],[13,"SerdeJsonError","","",26,N],[13,"Hyper","","",26,N],[13,"Http","","",26,N],[13,"IO","","",26,N],[13,"Fault","","",26,N],[12,"code","shiplift::errors::Error","",26,N],[12,"message","","",26,N],[11,"fmt","shiplift::errors","",26,[[["self"],["formatter"]],["result"]]],[11,"from","","",26,[[["serdeerror"]],["error"]]],[11,"from","","",26,[[["error"]],["error"]]],[11,"from","","",26,[[["error"]],["error"]]],[11,"from","","",26,[[["ioerror"]],["error"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"description","","",26,[[["self"]],["str"]]],[11,"cause","","",26,[[["self"]],["option",["stderror"]]]],[0,"rep","shiplift","Rust representations of docker json structures",N,N],[3,"SearchResult","shiplift::rep","",N,N],[12,"description","","",27,N],[12,"is_official","","",27,N],[12,"is_automated","","",27,N],[12,"name","","",27,N],[12,"star_count","","",27,N],[3,"Image","","",N,N],[12,"created","","",28,N],[12,"id","","",28,N],[12,"parent_id","","",28,N],[12,"labels","","",28,N],[12,"repo_tags","","",28,N],[12,"repo_digests","","",28,N],[12,"virtual_size","","",28,N],[3,"ImageDetails","","",N,N],[12,"architecture","","",29,N],[12,"author","","",29,N],[12,"comment","","",29,N],[12,"config","","",29,N],[12,"created","","",29,N],[12,"docker_version","","",29,N],[12,"id","","",29,N],[12,"os","","",29,N],[12,"parent","","",29,N],[12,"size","","",29,N],[12,"virtual_size","","",29,N],[3,"Container","","",N,N],[12,"created","","",30,N],[12,"command","","",30,N],[12,"id","","",30,N],[12,"image","","",30,N],[12,"labels","","",30,N],[12,"names","","",30,N],[12,"ports","","",30,N],[12,"status","","",30,N],[12,"size_rw","","",30,N],[12,"size_root_fs","","",30,N],[3,"ContainerDetails","","",N,N],[12,"app_armor_profile","","",31,N],[12,"args","","",31,N],[12,"config","","",31,N],[12,"created","","",31,N],[12,"driver","","",31,N],[12,"host_config","","",31,N],[12,"hostname_path","","",31,N],[12,"hosts_path","","",31,N],[12,"log_path","","",31,N],[12,"id","","",31,N],[12,"image","","",31,N],[12,"mount_label","","",31,N],[12,"name","","",31,N],[12,"network_settings","","",31,N],[12,"path","","",31,N],[12,"process_label","","",31,N],[12,"resolv_conf_path","","",31,N],[12,"restart_count","","",31,N],[12,"state","","",31,N],[12,"mounts","","",31,N],[3,"Mount","","",N,N],[12,"source","","",32,N],[12,"destination","","",32,N],[12,"mode","","",32,N],[12,"rw","","",32,N],[3,"State","","",N,N],[12,"error","","",33,N],[12,"exit_code","","",33,N],[12,"finished_at","","",33,N],[12,"oom_killed","","",33,N],[12,"paused","","",33,N],[12,"pid","","",33,N],[12,"restarting","","",33,N],[12,"running","","",33,N],[12,"started_at","","",33,N],[3,"NetworkSettings","","",N,N],[12,"bridge","","",34,N],[12,"gateway","","",34,N],[12,"ip_address","","",34,N],[12,"ip_prefix_len","","",34,N],[12,"mac_address","","",34,N],[12,"ports","","",34,N],[12,"networks","","",34,N],[3,"NetworkEntry","","",N,N],[12,"network_id","","",35,N],[12,"endpoint_id","","",35,N],[12,"gateway","","",35,N],[12,"ip_address","","",35,N],[12,"ip_prefix_len","","",35,N],[12,"ipv6_gateway","","",35,N],[12,"global_ipv6_address","","",35,N],[12,"global_ipv6_prefix_len","","",35,N],[12,"mac_address","","",35,N],[3,"HostConfig","","",N,N],[12,"cgroup_parent","","",36,N],[12,"container_id_file","","",36,N],[12,"cpu_shares","","",36,N],[12,"cpuset_cpus","","",36,N],[12,"memory","","",36,N],[12,"memory_swap","","",36,N],[12,"network_mode","","",36,N],[12,"pid_mode","","",36,N],[12,"port_bindings","","",36,N],[12,"privileged","","",36,N],[12,"publish_all_ports","","",36,N],[12,"readonly_rootfs","","",36,N],[3,"Config","","",N,N],[12,"attach_stderr","","",37,N],[12,"attach_stdin","","",37,N],[12,"attach_stdout","","",37,N],[12,"cmd","","",37,N],[12,"domainname","","",37,N],[12,"entrypoint","","",37,N],[12,"env","","",37,N],[12,"exposed_ports","","",37,N],[12,"hostname","","",37,N],[12,"image","","",37,N],[12,"labels","","",37,N],[12,"on_build","","",37,N],[12,"open_stdin","","",37,N],[12,"stdin_once","","",37,N],[12,"tty","","",37,N],[12,"user","","",37,N],[12,"working_dir","","",37,N],[3,"Port","","",N,N],[12,"ip","","",38,N],[12,"private_port","","",38,N],[12,"public_port","","",38,N],[12,"typ","","",38,N],[3,"Stats","","",N,N],[12,"read","","",39,N],[12,"networks","","",39,N],[12,"memory_stats","","",39,N],[12,"blkio_stats","","",39,N],[12,"cpu_stats","","",39,N],[3,"Network","","",N,N],[12,"rx_dropped","","",40,N],[12,"rx_bytes","","",40,N],[12,"rx_errors","","",40,N],[12,"tx_packets","","",40,N],[12,"tx_dropped","","",40,N],[12,"rx_packets","","",40,N],[12,"tx_errors","","",40,N],[12,"tx_bytes","","",40,N],[3,"IPAM","","",N,N],[12,"driver","","",41,N],[12,"config","","",41,N],[12,"options","","",41,N],[3,"NetworkDetails","","",N,N],[12,"name","","",42,N],[12,"id","","",42,N],[12,"scope","","",42,N],[12,"driver","","",42,N],[12,"enable_ipv6","","",42,N],[12,"ipam","","",42,N],[12,"internal","","",42,N],[12,"attachable","","",42,N],[12,"containers","","",42,N],[12,"options","","",42,N],[12,"labels","","",42,N],[3,"NetworkContainerDetails","","",N,N],[12,"endpoint_id","","",43,N],[12,"mac_address","","",43,N],[12,"ipv4_address","","",43,N],[12,"ipv6_address","","",43,N],[3,"NetworkCreateInfo","","",N,N],[12,"id","","",44,N],[12,"warning","","",44,N],[3,"MemoryStats","","",N,N],[12,"max_usage","","",45,N],[12,"usage","","",45,N],[12,"failcnt","","",45,N],[12,"limit","","",45,N],[12,"stats","","",45,N],[3,"MemoryStat","","",N,N],[12,"total_pgmajfault","","",46,N],[12,"cache","","",46,N],[12,"mapped_file","","",46,N],[12,"total_inactive_file","","",46,N],[12,"pgpgout","","",46,N],[12,"rss","","",46,N],[12,"total_mapped_file","","",46,N],[12,"writeback","","",46,N],[12,"unevictable","","",46,N],[12,"pgpgin","","",46,N],[12,"total_unevictable","","",46,N],[12,"pgmajfault","","",46,N],[12,"total_rss","","",46,N],[12,"total_rss_huge","","",46,N],[12,"total_writeback","","",46,N],[12,"total_inactive_anon","","",46,N],[12,"rss_huge","","",46,N],[12,"hierarchical_memory_limit","","",46,N],[12,"hierarchical_memsw_limit","","",46,N],[12,"total_pgfault","","",46,N],[12,"total_active_file","","",46,N],[12,"active_anon","","",46,N],[12,"total_active_anon","","",46,N],[12,"total_pgpgout","","",46,N],[12,"total_cache","","",46,N],[12,"inactive_anon","","",46,N],[12,"active_file","","",46,N],[12,"pgfault","","",46,N],[12,"inactive_file","","",46,N],[12,"total_pgpgin","","",46,N],[3,"CpuStats","","",N,N],[12,"cpu_usage","","",47,N],[12,"system_cpu_usage","","",47,N],[12,"throttling_data","","",47,N],[3,"CpuUsage","","",N,N],[12,"percpu_usage","","",48,N],[12,"usage_in_usermode","","",48,N],[12,"total_usage","","",48,N],[12,"usage_in_kernelmode","","",48,N],[3,"ThrottlingData","","",N,N],[12,"periods","","",49,N],[12,"throttled_periods","","",49,N],[12,"throttled_time","","",49,N],[3,"BlkioStats","","",N,N],[12,"io_service_bytes_recursive","","",50,N],[12,"io_serviced_recursive","","",50,N],[12,"io_queue_recursive","","",50,N],[12,"io_service_time_recursive","","",50,N],[12,"io_wait_time_recursive","","",50,N],[12,"io_merged_recursive","","",50,N],[12,"io_time_recursive","","",50,N],[12,"sectors_recursive","","",50,N],[3,"BlkioStat","","",N,N],[12,"major","","",51,N],[12,"minor","","",51,N],[12,"op","","",51,N],[12,"value","","",51,N],[3,"Change","","",N,N],[12,"kind","","",52,N],[12,"path","","",52,N],[3,"Top","","",N,N],[12,"titles","","",53,N],[12,"processes","","",53,N],[3,"Version","","",N,N],[12,"api_version","","",54,N],[12,"version","","",54,N],[12,"git_commit","","",54,N],[12,"go_version","","",54,N],[3,"Info","","",N,N],[12,"containers","","",55,N],[12,"images","","",55,N],[12,"driver","","",55,N],[12,"docker_root_dir","","",55,N],[12,"driver_status","","",55,N],[12,"id","","",55,N],[12,"kernel_version","","",55,N],[12,"mem_total","","",55,N],[12,"memory_limit","","",55,N],[12,"n_cpu","","",55,N],[12,"n_events_listener","","",55,N],[12,"n_goroutines","","",55,N],[12,"name","","",55,N],[12,"operating_system","","",55,N],[12,"swap_limit","","",55,N],[12,"system_time","","",55,N],[3,"ContainerCreateInfo","","",N,N],[12,"id","","",56,N],[12,"warnings","","",56,N],[3,"History","","",N,N],[12,"id","","",57,N],[12,"created","","",57,N],[12,"created_by","","",57,N],[3,"Exit","","",N,N],[12,"status_code","","",58,N],[3,"Event","","",N,N],[12,"typ","","",59,N],[12,"action","","",59,N],[12,"actor","","",59,N],[12,"status","","",59,N],[12,"id","","",59,N],[12,"from","","",59,N],[12,"time","","",59,N],[12,"time_nano","","",59,N],[3,"Actor","","",N,N],[12,"id","","",60,N],[12,"attributes","","",60,N],[4,"Status","","",N,N],[13,"Untagged","","",61,N],[13,"Deleted","","",61,N],[11,"clone","","",27,[[["self"]],["searchresult"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"clone","","",28,[[["self"]],["image"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"clone","","",29,[[["self"]],["imagedetails"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"clone","","",30,[[["self"]],["container"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"clone","","",31,[[["self"]],["containerdetails"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"clone","","",32,[[["self"]],["mount"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"clone","","",33,[[["self"]],["state"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"clone","","",34,[[["self"]],["networksettings"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"clone","","",35,[[["self"]],["networkentry"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"clone","","",36,[[["self"]],["hostconfig"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"clone","","",37,[[["self"]],["config"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"env","","",37,[[["self"]],["hashmap",["string","string"]]]],[11,"clone","","",38,[[["self"]],["port"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"clone","","",39,[[["self"]],["stats"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"clone","","",40,[[["self"]],["network"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"clone","","",41,[[["self"]],["ipam"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"clone","","",42,[[["self"]],["networkdetails"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"clone","","",43,[[["self"]],["networkcontainerdetails"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"clone","","",44,[[["self"]],["networkcreateinfo"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"clone","","",45,[[["self"]],["memorystats"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"clone","","",46,[[["self"]],["memorystat"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"clone","","",47,[[["self"]],["cpustats"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"clone","","",48,[[["self"]],["cpuusage"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"clone","","",49,[[["self"]],["throttlingdata"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"clone","","",50,[[["self"]],["blkiostats"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"clone","","",51,[[["self"]],["blkiostat"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"clone","","",52,[[["self"]],["change"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"clone","","",53,[[["self"]],["top"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"clone","","",54,[[["self"]],["version"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"clone","","",55,[[["self"]],["info"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"clone","","",56,[[["self"]],["containercreateinfo"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"clone","","",57,[[["self"]],["history"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"clone","","",58,[[["self"]],["exit"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"clone","","",59,[[["self"]],["event"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"clone","","",60,[[["self"]],["actor"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"clone","","",61,[[["self"]],["status"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[0,"transport","shiplift","Transports for communicating with the docker daemon",N,N],[4,"Transport","shiplift::transport","Transports are types which define the means of communication with the docker daemon",N,N],[13,"Tcp","","A network tcp interface",62,N],[12,"client","shiplift::transport::Transport","",62,N],[12,"runtime","","",62,N],[12,"host","","",62,N],[13,"EncryptedTcp","shiplift::transport","TCP/TLS",62,N],[12,"client","shiplift::transport::Transport","",62,N],[12,"runtime","","",62,N],[12,"host","","",62,N],[13,"Unix","shiplift::transport","A Unix domain socket",62,N],[12,"client","shiplift::transport::Transport","",62,N],[12,"runtime","","",62,N],[12,"path","","",62,N],[5,"tar","shiplift::transport","",N,[[],["mime"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"request","","",62,[[["self"],["method"],["str"],["option"]],["result",["string"]]]],[11,"stream","","",62,[[["self"],["method"],["str"],["option"]],["result",["box"]]]],[0,"tty","shiplift","",N,N],[3,"Tty","shiplift::tty","",N,N],[12,"stdout","","",63,N],[12,"stderr","","",63,N],[3,"InterlacedTty","","Used to demux the output of Docker log, but still keep lines from stdout and stderr interlaced in the right order.",N,N],[12,"lines","","",64,N],[4,"TtyLine","","",N,N],[13,"StdOut","","",65,N],[13,"StdErr","","",65,N],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"new","","",63,N],[11,"new","","",64,N],[6,"Result","shiplift","Represents the result of all docker operations",N,N],[11,"new","","Exports an interface for operations that may be performed against a named image",66,[[["docker"],["s"]],["image"]]],[11,"inspect","","Inspects a named image's details",66,[[["self"]],["result",["imagedetails"]]]],[11,"history","","Lists the history of the images set of changes",66,[[["self"]],["result",["vec"]]]],[11,"delete","","Delete's an image",66,[[["self"]],["result",["vec"]]]],[11,"export","","Export this image to a tarball",66,[[["self"]],["result",["box"]]]],[11,"new","","Exports an interface for interacting with docker images",67,[[["docker"]],["images"]]],[11,"build","","Builds a new image build by reading a Dockerfile in a target directory",67,[[["self"],["buildoptions"]],["result",["vec"]]]],[11,"list","","Lists the docker images on the current docker host",67,[[["self"],["imagelistoptions"]],["result",["vec"]]]],[11,"get","","Returns a reference to a set of operations available for a named image",67,[[["self"],["str"]],["image"]]],[11,"search","","Search for docker images by term",67,[[["self"],["str"]],["result",["vec"]]]],[11,"pull","","Pull and create a new docker images from an existing image",67,[[["self"],["pulloptions"]],["result",["vec"]]]],[11,"export","","exports a collection of named images, either by name, name:tag, or image id, into a tarball",67,[[["self"],["vec",["str"]]],["result",["box"]]]],[11,"new","","Exports an interface exposing operations against a container instance",68,[[["docker"],["s"]],["container"]]],[11,"id","","a getter for the container id",68,[[["self"]],["str"]]],[11,"inspect","","Inspects the current docker container instance's details",68,[[["self"]],["result",["containerdetails"]]]],[11,"top","","Returns a `top` view of information about the container process",68,[[["self"],["option",["str"]]],["result",["top"]]]],[11,"logs","","Returns a stream of logs emitted but the container instance",68,[[["self"],["logsoptions"]],["result",["box"]]]],[11,"changes","","Returns a set of changes made to the container instance",68,[[["self"]],["result",["vec"]]]],[11,"export","","Exports the current docker container into a tarball",68,[[["self"]],["result",["box"]]]],[11,"stats","","Returns a stream of stats specific to this container instance",68,[[["self"]],["result",["vec"]]]],[11,"start","","Start the container instance",68,[[["self"]],["result"]]],[11,"stop","","Stop the container instance",68,[[["self"],["option",["duration"]]],["result"]]],[11,"restart","","Restart the container instance",68,[[["self"],["option",["duration"]]],["result"]]],[11,"kill","","Kill the container instance",68,[[["self"],["option",["str"]]],["result"]]],[11,"rename","","Rename the container instance",68,[[["self"],["str"]],["result"]]],[11,"pause","","Pause the container instance",68,[[["self"]],["result"]]],[11,"unpause","","Unpause the container instance",68,[[["self"]],["result"]]],[11,"wait","","Wait until the container stops",68,[[["self"]],["result",["exit"]]]],[11,"delete","","Delete the container instance",68,[[["self"]],["result"]]],[11,"remove","","Delete the container instance (todo: force/v)",68,[[["self"],["rmcontaineroptions"]],["result"]]],[11,"exec","","Exec the specified command in the container",68,[[["self"],["execcontaineroptions"]],["result",["tty"]]]],[11,"new","","Exports an interface for interacting with docker containers",69,[[["docker"]],["containers"]]],[11,"list","","Lists the container instances on the docker host",69,[[["self"],["containerlistoptions"]],["result",["vec"]]]],[11,"get","","Returns a reference to a set of operations available to a specific container instance",69,[[["self"],["str"]],["container"]]],[11,"create","","Returns a builder interface for creating a new container instance",69,[[["self"],["containeroptions"]],["result",["containercreateinfo"]]]],[11,"new","","Exports an interface for interacting with docker Networks",70,[[["docker"]],["networks"]]],[11,"list","","List the docker networks on the current docker host",70,[[["self"],["networklistoptions"]],["result",["vec"]]]],[11,"get","","Returns a reference to a set of operations available to a specific network instance",70,[[["self"],["str"]],["network"]]],[11,"create","","",70,[[["self"],["networkcreateoptions"]],["result",["networkcreateinfo"]]]],[11,"new","","Exports an interface exposing operations against a network instance",71,[[["docker"],["s"]],["network"]]],[11,"id","","a getter for the Network id",71,[[["self"]],["str"]]],[11,"inspect","","Inspects the current docker network instance's details",71,[[["self"]],["result",["networkinfo"]]]],[11,"delete","","Delete the network instance",71,[[["self"]],["result"]]],[11,"connect","","Connect container to network",71,[[["self"],["containerconnectionoptions"]],["result"]]],[11,"disconnect","","Disconnect container to network",71,[[["self"],["containerconnectionoptions"]],["result"]]],[11,"new","","constructs a new Docker instance for a docker host listening at a url specified by an env var `DOCKER_HOST`, falling back on unix:///var/run/docker.sock",72,[[],["docker"]]],[11,"unix","","Creates a new docker instance for a docker host listening on a given Unix socket.",72,[[["s"]],["docker"]]],[11,"host","","constructs a new Docker instance for docker host listening at the given host url",72,[[["uri"]],["docker"]]],[11,"images","","Exports an interface for interacting with docker images",72,[[["self"]],["images"]]],[11,"containers","","Exports an interface for interacting with docker containers",72,[[["self"]],["containers"]]],[11,"networks","","",72,[[["self"]],["networks"]]],[11,"version","","Returns version information associated with the docker daemon",72,[[["self"]],["result",["version"]]]],[11,"info","","Returns information associated with the docker daemon",72,[[["self"]],["result",["info"]]]],[11,"ping","","Returns a simple ping response indicating the docker daemon is accessible",72,[[["self"]],["result",["string"]]]],[11,"events","","Returns an interator over streamed docker events",72,[[["self"],["eventsoptions"]],["result",["vec"]]]]],"paths":[[3,"BuildOptions"],[3,"ContainerOptions"],[3,"NetworkCreateOptions"],[3,"ContainerConnectionOptions"],[4,"ContainerFilter"],[4,"EventFilterType"],[4,"EventFilter"],[4,"ImageFilter"],[3,"PullOptions"],[3,"PullOptionsBuilder"],[3,"BuildOptionsBuilder"],[3,"ContainerListOptions"],[3,"ContainerListOptionsBuilder"],[3,"ContainerOptionsBuilder"],[3,"ExecContainerOptions"],[3,"ExecContainerOptionsBuilder"],[3,"EventsOptions"],[3,"EventsOptionsBuilder"],[3,"LogsOptions"],[3,"LogsOptionsBuilder"],[3,"ImageListOptions"],[3,"ImageListOptionsBuilder"],[3,"RmContainerOptions"],[3,"RmContainerOptionsBuilder"],[3,"NetworkListOptions"],[3,"NetworkCreateOptionsBuilder"],[4,"Error"],[3,"SearchResult"],[3,"Image"],[3,"ImageDetails"],[3,"Container"],[3,"ContainerDetails"],[3,"Mount"],[3,"State"],[3,"NetworkSettings"],[3,"NetworkEntry"],[3,"HostConfig"],[3,"Config"],[3,"Port"],[3,"Stats"],[3,"Network"],[3,"IPAM"],[3,"NetworkDetails"],[3,"NetworkContainerDetails"],[3,"NetworkCreateInfo"],[3,"MemoryStats"],[3,"MemoryStat"],[3,"CpuStats"],[3,"CpuUsage"],[3,"ThrottlingData"],[3,"BlkioStats"],[3,"BlkioStat"],[3,"Change"],[3,"Top"],[3,"Version"],[3,"Info"],[3,"ContainerCreateInfo"],[3,"History"],[3,"Exit"],[3,"Event"],[3,"Actor"],[4,"Status"],[4,"Transport"],[3,"Tty"],[3,"InterlacedTty"],[4,"TtyLine"],[3,"Image"],[3,"Images"],[3,"Container"],[3,"Containers"],[3,"Networks"],[3,"Network"],[3,"Docker"]]};
initSearch(searchIndex);
